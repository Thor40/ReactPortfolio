{"version":3,"sources":["assets/images/image0.jpeg","components/Nav/index.js","utils/helpers.js","components/pages/About/index.js","components/pages/PhotoList/index.js","components/pages/Projects/index.js","components/pages/Contact/index.js","components/pages/Resume/index.js","components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","props","currentPage","useEffect","string","document","title","charAt","toUpperCase","slice","className","map","tab","key","href","onClick","handlePageChange","About","id","src","coverImage","style","width","position","alt","PhotoList","name","description","url","img","pData","i","Projects","ContactForm","useState","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","e","target","isValid","test","String","toLowerCase","validateEmail","value","console","log","length","onSubmit","preventDefault","htmlFor","type","defaultValue","onBlur","class","rows","Resume","MainPage","Contact","renderPage","icon","faGithub","size","faLinkedin","faInstagram","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.1eac1474.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image0.de63fd8b.jpeg\";","import React, { useEffect } from \"react\";\nimport { capitalizeFirstLetter } from \"../../utils/helpers\";\n// MAKE CONTACT A MODAL\n\nfunction Nav(props) {\n\n    const {\n        currentPage\n    } = props;\n\n    useEffect(() => {\n        document.title = capitalizeFirstLetter(currentPage)});\n\n      const tabs = ['About', 'Projects', 'Contact', 'Resume'];\n    return (\n        <header>\n            <nav>\n                <ul className='nav nav-fill'>\n                    <h1>\n                            Nicholas Kosik\n                    </h1>\n                    {tabs.map(tab => (\n                        <li className=\"nav-item\" key={tab}>\n                            <a href={\"#\" + tab}\n                            onClick={() => props.handlePageChange(tab)}\n                            className={\n                                props.currentPage === tab ? 'nav-link' : 'nav-link active'\n                            }\n                            >\n                                {tab}\n                            </a>\n                    </li>\n                    ))}\n                </ul>\n            </nav>\n        </header>\n    );\n}\n\nexport default Nav;","export function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function validateEmail(email) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}","import React from 'react';\nimport coverImage from '../../../assets/images/image0.jpeg';\n\nfunction About() {\n    const selfStyle ={\n        width: \"50%\",\n        position: \"center\"\n    }\n    return (\n        <section>\n            <div className=\"flex js\">\n            <h2 id=\"about\">Howdy</h2>\n            </div>\n                <div className=\"flex space-between\">\n                    <img src={coverImage}\n                    className=\"my-2 flex\"\n                    style={selfStyle}\n                    alt=\"Nicholas Kosik\"\n                    />\n                    <p className=\"align-items\">\n                        Full-Stack Programmer looking for the next project. \n                    </p>\n                </div>\n        </section>\n    );\n}\n\nexport default About;","import React from 'react';\n\nfunction PhotoList() {\n    \n    const projectData = [\n        {\n          id: 0,\n          name: 'Run-Buddy',\n          description: 'HTML, basic JavaScript, and CSS mock website',\n          url: 'https://github.com/Thor40/run-buddy',\n          img: '0.jpg'\n        },\n        {\n          id: 1,\n          name: 'Nutrifinder',\n          description: 'JavaScript web app using a third party API to allow user to keyword-search for foods, nutrition facts, and recipes.',\n          url: 'https://github.com/durcoorigin/nutrifinder',\n          img: 'nutrifinder.jpg'\n        },\n        {\n          id: 2,\n          name: 'The Informed Artist',\n          description: 'JavaScript web app using MySQL2 and Sequelize to allow users to upload images in this art sharing platform',\n          url: 'https://github.com/roxyvaught/The-Informed-Artist',\n          img: 'TIA.png'\n        },\n        {\n          id: 3,\n          name: 'GoodFam',\n          description: 'This project was created as an exercise practicing creating an API for a social network using MongoDB, Mongoose ODM, and several other quality of life packages.',\n          url: 'https://github.com/Thor40/goodFam',\n          img: 'code.jpg'\n        }\n    ];\n\n    return (\n          <div className=\"container\">\n            <div className=\"row\">\n            {projectData.map((pData, i) => (\n              <div className=\"col\">\n              <div className=\"card m-1\" style={ { width: \"30rem\" } }>\n                <img src={`/assets/images/${pData.img}`} className=\"card-img-top\" alt=\"...\" />\n                <div className=\"card-body\">\n              <h3 className=\"card-title\">{pData.name}</h3>\n                  <p className=\"card-text\">{pData.description}</p>\n                  <a href={pData.url} className=\"btn btn-primary\">GitHub</a>\n                </div>\n              </div>\n              </div>\n            ))}\n            </div>\n          </div>\n      );\n    };\n\nexport default PhotoList;","import React from 'react';\nimport PhotoList from '../PhotoList';\n\nfunction Projects() {\n\n  return (\n    <section>\n      <div className=\"flex justify-content-center mb-5\">\n      <h2>My Projects</h2>\n      </div>\n        <PhotoList />\n    </section>\n  );\n}\nexport default Projects;","import React, { useState } from 'react';\nimport { validateEmail } from '../../../utils/helpers';\n\nfunction ContactForm(props) {\n    const [formState, setFormState ] = useState({ name: '', email: '', message: '' });\n    const { name, email, message } = formState;\n    const [errorMessage, setErrorMessage] = useState('');\n\n    // handle change in form input fields\n    function handleChange(e) {\n        // if target is email\n        if (e.target.name === 'email') {\n            // isValid runs email validation\n            const isValid = validateEmail(e.target.value);\n            console.log(isValid);\n            // isValid conditional statement\n                if (!isValid) {\n                    setErrorMessage('Your email is invalid.');\n                } else {\n                    // else blank error message, which is set to blank\n                    setErrorMessage('');\n                }\n            } else {\n                // if element values blank\n                if (!e.target.value.length) {\n                    // require element\n                  setErrorMessage(`${e.target.name} is required.`);\n                } else {\n                    // else blank error message, which is set to blank\n                  setErrorMessage('');\n                }\n              }\n        setFormState({...formState, [e.target.name]: e.target.value })\n        // conditional state only updates if the from data passes quality test\n        if (!errorMessage) {\n            setFormState({ ...formState, [e.target.name]: e.target.value });\n          }\n    }\n\n    // when submit clicked, prevent default\n    function handleSubmit(e) {\n        e.preventDefault();\n        console.log(formState);\n    };\n\n\n\n    return (\n        <section>\n            <div className={\"flex-row mt-5\"}>\n                <div className={\"align-self-center\"}>\n                    <h2 className={\"\"}>Contact me</h2>\n                </div>\n                \n                <form id=\"contact-form\" className={\"container\"} onSubmit={handleSubmit}>\n                    <div className={\"form-group\"}>\n                        <label htmlFor=\"name\">Name:</label>\n                        <input type=\"text\" defaultValue={name} onBlur={handleChange} name=\"name\" \n                        className={\"form-control\"}\n                        />\n                    </div>\n                    <div className={\"form-group\"}>\n                        <label htmlFor=\"email\">Email address:</label>\n                        <input type=\"email\" defaultValue={email} onBlur={handleChange} name=\"email\" \n                        className={\"form-control\"}\n                        />\n                        <small id=\"passwordHelpBlock\" class=\"form-text text-muted\">\n                        You must input a vaild email address; e.g. email@email.com.\n                        </small>\n                    </div>\n                    <div className={\"form-group\"}> \n                        <label htmlFor=\"message\">Message:</label>\n                        <textarea name=\"message\" defaultValue={message} onBlur={handleChange} rows=\"5\"\n                        className={\"form-control\"}\n                        />\n                    </div>\n                    {errorMessage && (\n                        <div>\n                            <p className=\"error-text\">{errorMessage}</p>\n                        </div>\n                        )}\n                    <button type=\"submit\" className={\"btn btn-primary\"}>Submit</button>\n                </form>\n            </div>\n        </section>\n      )\n}\n\nexport default ContactForm;","import React from 'react';\n\nfunction Resume() {\n    return (\n        <section>\n            <div className=\"flex-column\">\n                <div className=\"justify-content-end\">\n                    <h2 id=\"resume\" className=\"mt-5\">Resume</h2>  \n                    <p>Link to Resume <a href={\"/assets/images/nickKosikResume.pdf\"}>here</a></p> \n                </div>\n                \n            <div className=\"mt-5\">\n                <h3>Front End</h3>\n                <ul class=\"list-group list-group-flush mb-5\">\n                    <li class=\"list-group-item\">HTML</li>\n                    <li class=\"list-group-item\">CSS</li>\n                    <li class=\"list-group-item\">JavaScript</li>\n                    <li class=\"list-group-item\">jQuery</li>\n                    <li class=\"list-group-item\">Responsive Designs</li>\n                    <li class=\"list-group-item\">React</li>\n                    <li class=\"list-group-item\">Bootstrap</li>\n                    <li class=\"list-group-item\">Bulma</li>\n                </ul>\n            </div>\n            <div>\n                <h3>Back End</h3>\n                <ul class=\"list-group list-group-flush\">\n                    <li class=\"list-group-item\">APIs</li>\n                    <li class=\"list-group-item\">Node</li>\n                    <li class=\"list-group-item\">Express</li>\n                    <li class=\"list-group-item\">MySQL, NoSQl, Sequelize</li>\n                    <li class=\"list-group-item\">MongoDB, Mongoose</li>\n                    <li class=\"list-group-item\">REST</li>\n                    <li class=\"list-group-item\">GraphQL</li>\n                </ul>\n            </div>\n            \n            </div>\n        </section>\n    )\n}\n\nexport default Resume;","import React, { useState } from 'react';\nimport Nav from './Nav';\nimport About from './pages/About';\nimport Projects from './pages/Projects';\nimport ContactForm from './pages/Contact';\nimport Resume from './pages/Resume';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faGithub,\n  faLinkedin,\n  faInstagram\n} from \"@fortawesome/free-brands-svg-icons\";\n\nfunction MainPage() {\n\n  const [currentPage, handlePageChange] = useState('About');\n\n  const renderPage = () => {\n    switch (currentPage) {\n      case 'About':\n        return <About />;\n      case 'Projects':\n        return <Projects />;\n      case 'Contact':\n        return <ContactForm />;\n        case 'Resume':\n          return <Resume />;\n      default:\n        return <About />;\n    }\n  };\n  return (\n    <main>\n        <Nav\n          currentPage={currentPage} handlePageChange={handlePageChange}\n        ></Nav>\n        <div>{renderPage(currentPage)}</div>\n        <footer className=\"container flex js\">\n          <div className=\"mt-5 border-top p-2\">\n              <a\n                href=\"https://github.com/Thor40\"\n                className=\"m-2\"\n              >\n                <FontAwesomeIcon icon={faGithub} size=\"2x\" />\n              </a>\n              <a href=\"https://www.linkedin.com/in/nicholas-kosik-17405a1a3/\" className=\"m-2\">\n                <FontAwesomeIcon icon={faLinkedin} size=\"2x\" />\n              </a>\n              <a\n                href=\"https://www.instagram.com/thorkosik/\"\n                className=\"m-2\"\n              >\n                <FontAwesomeIcon icon={faInstagram} size=\"2x\" />\n              </a>\n          </div>  \n        </footer>\n      </main>\n  );\n}\n\nexport default MainPage;","import React from 'react';\nimport MainPage from './components/MainPage';\nimport './App.css';\n\nconst App = () => <MainPage />\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}